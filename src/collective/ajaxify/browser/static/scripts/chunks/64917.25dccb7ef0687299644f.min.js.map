{"version":3,"file":"chunks/64917.25dccb7ef0687299644f.min.js","mappings":"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","sources":["webpack://collective.ajaxify/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://collective.ajaxify/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://collective.ajaxify/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://collective.ajaxify/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://collective.ajaxify/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://collective.ajaxify/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://collective.ajaxify/./node_modules/@patternslib/patternslib/src/pat/ajax/ajax.js","webpack://collective.ajaxify/./node_modules/@patternslib/patternslib/src/core/uuid.js","webpack://collective.ajaxify/./node_modules/@patternslib/patternslib/src/core/polyfills.js"],"sourcesContent":["import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Create a RegExp object of a wildcard search string.\n *\n * @param {string} wildcard: A search string which can contain wildcards \"*\".\n *                           The wildcard \"*\" can be anywhere in the string and\n *                           can also be used multiple times. If no wildcard is\n *                           present the search string is used for an exact match.\n\n * @returns {RegExp}: A RegExp object which can be used to match strings.\n */\nfunction regexp_from_wildcard(wildcard) {\n    let regexp = wildcard.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    regexp = regexp.replace(/[*]/g, \".*\");\n    regexp = new RegExp(`^${regexp}$`);\n    return regexp;\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        const matcher = regexp_from_wildcard(classes);\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} [postpone=true] - If true, the function will only be called\n * at the end, after it stops being called for N milliseconds. If false, the\n * function will be called no more than each [ms] milliseconds, ensuring that\n * the function isn't postponed for for too long.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\n// TODO: Remove in next major release.\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    // eslint-disable-next-line no-constant-binary-expression\n    return /*@cc_on!@*/false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    regexp_from_wildcard: regexp_from_wildcard,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    //getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) console.debug.apply(console, messages);\n        else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw `Attempted to add an alias \"${alias}\" for a non-existing parser argument \"${original}\".`;\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw `Cannot convert value for ${name} to boolean.`;\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw `Cannot convert value for ${name} to number.`;\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw `Cannot convert value for ${name} to number.`;\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw `Do not know how to convert value for ${name} of type ${typeof value} to ${\n                            spec.type\n                        }.`;\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(`Illegal value for ${name}: ${value}.`);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(`Ignoring value for unknown argument: ${name}.`);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(`Invalid parameter: ${part}: ${argstring}.`);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(`Unknown named parameter: ${matches[1]}.`);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(`Ignore extra arguments: ${parts.join(\" \")}.`);\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch {\n                this.log.warn(`Invalid JSON argument found: ${parameter}.`);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters) {\n            if (typeof this.parameters[name].value === \"function\") {\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch {\n                    this.log.error(`Default function for ${name} failed.`);\n                }\n            } else {\n                result[name] = this.parameters[name].value;\n            }\n        }\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) {\n                continue;\n            }\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            ) {\n                options[name] = options[spec.value.slice(1)];\n            }\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) {\n                    continue;\n                }\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\") {\n                        options[spec.group] = {};\n                    }\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el.parents(`[${this.attribute}]`).addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","import utils from \"./utils\";\n\n// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = new Map();\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map.has(el)) {\n        event_listener_map.set(el, new Map());\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            event_listener_map.get(el)?.delete(id);\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map\n        .get(el)\n        .set(id, [event_type, _cb, opts.capture ? opts : undefined]);\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * If an element and id are given, the event listeners for the given element matching the id are removed.\n * If an element but no id is given, all event listeners for that element are removed.\n * If an id but no element is given, all event listeners for any element matching the id are removed.\n * If no element and no id are given, all event listeners are removed.\n *\n * The id can be a wildcard string, e.g. `test-*-event`, which would match any\n * event which starts with \"test-\" and ends with \"-event\". The wildcard \"*\" can\n * be anywhere in the string and also be used multiple times. If no wildcard is\n * present the search string is used for an exact match.\n *\n * @param {DOM Node} [el] - The element to register the event for.\n * @param {string} [id] - A unique id under which the event is registered.\n *                        Can be a wildcard string.\n *\n */\nconst remove_event_listener = (el, id) => {\n    const els = el ? [el] : event_listener_map.keys();\n    for (const el of els) {\n        if (!el?.removeEventListener) {\n            return; // nothing to do.\n        }\n        const el_events = event_listener_map.get(el);\n        if (!el_events) {\n            return;\n        }\n        let entries;\n        if (id) {\n            // remove event listener with matching id\n            entries = [...el_events.entries()].filter((entry) =>\n                utils.regexp_from_wildcard(id).test(entry[0])\n            );\n        } else {\n            // remove all event listeners of element\n            entries = el_events.entries();\n        }\n        for (const entry of entries || []) {\n            // Remove event listener\n            el.removeEventListener(entry[1][0], entry[1][1], entry[1][2]);\n            // Delete entry from event_listener_map\n            event_listener_map.get(el).delete(entry[0]);\n            // Delete element from event_listener_map if no more events are registered.\n            if (!event_listener_map.get(el).size) {\n                event_listener_map.delete(el);\n            }\n        }\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\n/** Generic event factory.\n *\n * A event factory for a bubbling and cancelable generic event.\n *\n * @param {string} name - The event name.\n * @returns {Event} - Returns a blur event.\n */\nconst generic_event = (name) => {\n    return new Event(name, {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\n\n/** Patternslib specifc event factories\n */\n\nclass UpdateEvent extends CustomEvent {\n    constructor(options) {\n        super(\"pat-update\", {\n            bubbles: true,\n            cancelable: true,\n            detail: options\n        });\n    }\n}\n\nconst update_event = (options) => {\n    return new UpdateEvent(options);\n}\n\n\n/** Web API event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = ({ submitter } = { submitter: undefined }) => {\n    const event = new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n    event.submitter = submitter; // undefined or the submitting element\n    return event;\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    generic_event: generic_event,\n    update_event: update_event,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        dom.document_ready(() => {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        // Clean up selectors:\n        // - Remove whitespace,\n        // - Remove trailing commas,\n        // - Join to selecto string.\n        const selector_string = selectors.map(\n            (selector) => selector.trim().replace(/,$/, \"\")\n        ).join(\",\");\n\n        // Exit, if no selector.\n        if (!selector_string) {\n            return;\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selector_string\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns`` or wrapped within.\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements (not reachable anyways)\n            return (\n                !el?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                // BBB. TODO: Remove with next major version.\n                !el?.closest?.(\".cant-touch-this\")\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n\n        // Do not register blacklisted patterns.\n        let BLACKLIST = window.__patternslib_patterns_blacklist;\n        if (!Array.isArray(BLACKLIST)) {\n            BLACKLIST = [];\n        }\n        if (BLACKLIST.includes(name)) {\n            log.warn(`Pattern name ${name} is blacklisted.`);\n            return false;\n        }\n\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\nimport create_uuid from \"./uuid\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\nconst INPUT_SELECTOR = \"input, select, textarea, button\";\n\n/**\n * Wait for the document to be ready.\n *\n * @param {Function} fn - The function to call when the document is ready.\n */\nconst document_ready = (fn) => {\n    const event_id = create_uuid();\n\n    const _ready = () => {\n        if (document.readyState !== \"loading\") {\n            // Remove the event listener for this callback.\n            events.remove_event_listener(document, event_id);\n            // call on next available tick\n            setTimeout(fn, 1);\n        }\n    };\n\n    // Listen for the document to be ready and call _ready() when it is.\n    events.add_event_listener(document, \"readystatechange\", event_id, _ready);\n\n    // Also check the ready state immediately in case we missed the event.\n    _ready();\n};\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el || !el.querySelectorAll) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Test, if a element is a button-like input type.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_button = (el) => {\n    return el.matches(`\n        button,\n        input[type=image],\n        input[type=button],\n        input[type=reset],\n        input[type=submit]\n    `);\n};\n\n\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\n/**\n * Set and get a universally unique id (uuid) for a DOM element.\n *\n * This method returns a uuid for the given element. On the first call it will\n * generate a uuid and store it on the element.\n *\n * @param {Node} el - The DOM node to get the uuid for.\n * @returns {String} - The uuid.\n */\nconst element_uuid = (el) => {\n    if (!get_data(el, \"uuid\", false)) {\n        set_data(el, \"uuid\", create_uuid());\n    }\n    return get_data(el, \"uuid\");\n};\n\n/**\n * Find a related form element.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @returns {Node} - The closest form element.\n *\n * @example\n * find_form(document.querySelector(\"input\"));\n */\nconst find_form = (el) => {\n    // Prefer input.form which allows for input outside form elements and fall\n    // back to search for a parent form.\n    const form =\n        el.closest(\".pat-subform\") || // Special Patternslib subform concept has precedence.\n        el.form ||\n        el.querySelector(INPUT_SELECTOR)?.form ||\n        el.closest(\"form\");\n    return form;\n};\n\n/**\n * Find any input type.\n */\nconst find_inputs = (el) => {\n    return querySelectorAllAndMe(el, INPUT_SELECTOR);\n};\n\nconst dom = {\n    document_ready: document_ready,\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_inputs: find_inputs,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    is_button: is_button,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    element_uuid: element_uuid,\n    find_form: find_form,\n};\n\nexport default dom;\n","/**\n * Patterns ajax - AJAX injection for forms and anchors\n *\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2012-2013 Marko Durkovic\n */\nimport \"../../core/polyfills\"; // SubmitEvent.submitter for Safari < 15.4 and jsDOM\nimport $ from \"jquery\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport registry from \"../../core/registry\";\n\nconst log = logging.getLogger(\"pat.ajax\");\n\nexport const parser = new Parser(\"ajax\");\nparser.addArgument(\"accept\", \"text/html\");\nparser.addArgument(\"url\", function ($el) {\n    const el = $el[0];\n    const value =\n        el.tagName === \"A\"\n            ? el.getAttribute(\"href\")\n            : el.tagName === \"FORM\"\n            ? el.getAttribute(\"action\")\n            : \"\";\n    return (value || \"\").split(\"#\")[0];\n});\nparser.addArgument(\"browser-cache\", \"no-cache\", [\"cache\", \"no-cache\"]); // Cache ajax requests\n\nconst xhrCount = {};\nxhrCount.get = function (a) {\n    return this[a] !== undefined ? this[a] : 0;\n};\nxhrCount.inc = function (a) {\n    this[a] = this.get(a) + 1;\n    return this.get(a);\n};\n\nconst _ = {\n    name: \"ajax\",\n    trigger: \".pat-ajax\",\n    parser: parser,\n\n    init($el) {\n        $el.off(\".pat-ajax\");\n        $el.filter(\"a\").on(\"click.pat-ajax\", _.onTriggerEvents);\n        $el.filter(\"form\")\n            .on(\"submit.pat-ajax\", _.onTriggerEvents)\n            .on(\"click.pat-ajax\", \"[type=submit]\", _.onClickSubmit);\n        $el.filter(\":not(form,a)\").each(function () {\n            log.warn(\"Unsupported element:\", this);\n        });\n        return $el;\n    },\n\n    destroy($el) {\n        $el.off(\".pat-ajax\");\n    },\n\n    onClickSubmit(event) {\n        const el = event.submitter || event.target;\n        const form = el.form;\n        const data = {};\n        if (el.name) {\n            data[el.name] = el.value;\n        }\n        $(form).data(\"pat-ajax.clicked-data\", data);\n    },\n\n    onTriggerEvents(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        _.request($(this));\n    },\n\n    request($el, opts) {\n        return $el.each(function () {\n            _._request($(this), opts);\n        });\n    },\n\n    _request($el, opts) {\n        const cfg = _.parser.parse($el, opts);\n        const onError = function (jqxhr, status, error) {\n            // error can also stem from a javascript\n            // exception, not only errors described in the\n            // jqxhr.\n            log.error(\"load error for \" + cfg.url + \":\", error, jqxhr);\n            $el.trigger({\n                type: \"pat-ajax-error\",\n                jqxhr: jqxhr,\n            });\n        };\n        const seqNumber = xhrCount.inc(cfg.url);\n        const onSuccess = function (data, status, jqxhr) {\n            log.debug(\"success: jqxhr:\", jqxhr);\n            if (seqNumber === xhrCount.get(cfg.url)) {\n                // if this url is requested multiple time, only return the last result\n                $el.trigger({\n                    type: \"pat-ajax-success\",\n                    jqxhr: {\"url\": cfg.url, ...jqxhr},\n                });\n            } else {\n                // ignore\n            }\n        };\n        const temp = $el.data(\"pat-ajax.clicked-data\");\n        const clickedData = temp ? $.param(temp) : \"\";\n        const args = {\n            context: $el,\n            data: [$el.serialize(), clickedData].filter(Boolean).join(\"&\"),\n            headers: {},\n            url: cfg.url,\n            method: $el.attr(\"method\") ? $el.attr(\"method\") : \"GET\",\n            cache: cfg.browserCache === \"cache\" ? true : false,\n        };\n\n        if (cfg.accept) {\n            args.headers.Accept = cfg.accept;\n        }\n\n        if (\n            $el.is(\"form\") &&\n            $el.attr(\"method\") &&\n            $el.attr(\"method\").toUpperCase() == \"POST\"\n        ) {\n            const formdata = new FormData($el[0]);\n            for (const key in temp) {\n                formdata.append(key, temp[key]);\n            }\n            args[\"method\"] = \"POST\";\n            args[\"data\"] = formdata;\n            args[\"cache\"] = false;\n            args[\"contentType\"] = false;\n            args[\"processData\"] = false;\n            args[\"type\"] = \"POST\";\n        }\n\n        $el.removeData(\"pat-ajax.clicked-data\");\n        log.debug(\"request:\", args, $el[0]);\n\n        // Make it happen\n        const ajax_deferred = $.ajax(args);\n\n        if (ajax_deferred) ajax_deferred.done(onSuccess).fail(onError);\n    },\n};\n\nregistry.register(_);\n\nexport default _;\n","/**\n * Get a universally unique id (uuid).\n *\n * @returns {String} - The uuid.\n */\nconst create_uuid = () => {\n    let uuid;\n    if (window.crypto.randomUUID) {\n        // Create a real UUID\n        // window.crypto.randomUUID does only exist in browsers with secure\n        // context.\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\n        uuid = window.crypto.randomUUID();\n    } else {\n        // Create a sufficiently unique ID\n        const array = new Uint32Array(4);\n        uuid = window.crypto.getRandomValues(array).join(\"\");\n    }\n    return uuid;\n};\nexport default create_uuid;\n","// Polyfills for modern browsers\n\n// SubmitEvent.submitter polyfill for Safari < 15.4 and jsDOM\n// Original code: https://stackoverflow.com/a/61110260/1337474\n// Also see: https://caniuse.com/?search=submitter\n// NOTE: the `submitter` property is now widely available except for ancient browsers and jsDOM.\n!(function () {\n    if (window.SubmitEvent && \"submitter\" in window.SubmitEvent.prototype) {\n        // `submitter` attribute is already supported.\n        return;\n    }\n\n    let last_btn = null;\n    const submitable_buttons = `button, input[type=\"button\"], input[type=\"submit\"], input[type=\"image\"]`;\n    document.addEventListener(\n        \"click\",\n        function (e) {\n            if (!e.target.closest) return;\n            last_btn = e.target.closest(submitable_buttons);\n        },\n        true\n    );\n    document.addEventListener(\n        \"submit\",\n        function (e) {\n            if (\"submitter\" in e) return;\n            const canditates = [document.activeElement, last_btn];\n            last_btn = null;\n            for (const candidate of canditates) {\n                if (!candidate) continue;\n                if (!candidate.form) continue;\n                if (!candidate.matches(submitable_buttons)) continue;\n                e.submitter = candidate;\n                return;\n            }\n            e.submitter = e.target.querySelector(submitable_buttons);\n        },\n        true\n    );\n})();\n\n// Navigation polyfill for Firefox and Safari, as of 2024-01-04\n// NOTE: this is a very basic polyfill, it only supports firing a `navigate`\n// event on location change and even that without interception support, etc.\n!(function () {\n    if (window.navigation == undefined) {\n\n        class NavigateEvent extends CustomEvent {\n            constructor() {\n                super(\"navigate\");\n                this.destination = { url: undefined };\n            }\n        }\n\n        // Create a navigation object on the window\n        // We create a DOM element for the navigation object so that we can\n        // attach events on it.\n        window.navigation = document.createElement(\"div\");\n\n        const create_event = (args) => {\n            const event = new NavigateEvent();\n            event.destination.url = args[2];\n            return event;\n        };\n\n        // Patch pushState to trigger an `navigate` event on the navigation\n        // object when the URL changes.\n        const pushState = window.history.pushState;\n        window.history.pushState = function () {\n            pushState.apply(window.history, arguments);\n            window.navigation.dispatchEvent(create_event(arguments));\n        };\n\n        // Same with replaceState\n        const replaceState = window.history.replaceState;\n        window.history.replaceState = function () {\n            replaceState.apply(window.history, arguments);\n            window.navigation.dispatchEvent(create_event(arguments));\n        };\n    }\n})();\n"],"names":["$","safeClone","this","clone","Array","prototype","forEach","callback","thisArg","T","k","TypeError","O","Object","len","length","arguments","kValue","call","singleBoundJQueryPlugin","pattern","method","options","each","pat","$el","init","undefined","name","charAt","apply","pluralBoundJQueryPlugin","$this","concat","isObject","obj","type","regexp_from_wildcard","wildcard","regexp","replace","RegExp","isElementInViewport","el","partial","offset","rec","getBoundingClientRect","top","bottom","left","right","every","val","window","innerHeight","document","documentElement","clientHeight","innerWidth","clientWidth","utils","jqueryPlugin","escapeRegExp","str","extend","source","prop","i","hasOwnProperty","findLabel","input","$label","label","parentNode","nodeType","tagName","id","form","removeWildcardClass","targets","classes","ensureArray","indexOf","target","classList","remove","matcher","class_list","getAttribute","split","ok","filter","it","test","setAttribute","join","removeAttribute","hideOrShow","nodes","visible","pattern_name","dom","toNodeArray","transitions","none","hide","show","fade","slide","duration","transition","effect","on_complete","add","trigger","action","t","easing","complete","addURLQueryParameter","fullURL","param","value","parts","toString","url","hash","newURL","removeDuplicateObjects","objs","comparator","v","reduce","list","next_obj","is_duplicate","keys","entries","bind","push","mergeStack","stack","results","frame","frame_length","x","hasValue","checked","selectedIndex","parseTime","time","m","exec","Error","amount","parseFloat","Math","round","parseLength","reference_length","min","max","findRelatives","$relatives","closest","$form","body","find","get_bounds","bounds","parseInt","y","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","attribute","tag","supported","style","animation_frame","Promise","requestAnimationFrame","timeout","ms","resolve","setTimeout","debounce","func","timer","postpone","last_run","args","Date","now","clearTimeout","isIE","documentMode","jqToNode","jquery","force_array","NodeList","isPrototypeOf","isArray","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","appendChild","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","floor","threshold_list","num_steps","thresholds","sort","is_option_truthy","option","includes","elementInViewport","console","warn","root","writer","Function","oThis","aArgs","slice","fToBind","fNOP","fBound","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","parent","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","unshift","debug","info","error","getLogger","path","route","entry","shift","_getFlag","flag","context","setEnabled","state","isEnabled","setLevel","toUpperCase","getLevel","log","fatal","match","logconfig","location","search","api","getWriter","ArgumentParser","constructor","order","parameters","enum_values","enum_conflicts","groups","possible_groups","logging","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","__","p1","addAlias","alias","original","addGroupToSpec","spec","group","field","first_spec","first_name","dest","addArgument","choices","multiple","addJSONArgument","default_value","_typeof","choice","_coerce","JSON","parse","toLowerCase","num","isNaN","e","_set","opts","part","trim","_split","text","tokens","quoted","simple","_parseExtendedNotation","argstring","map","matches","arg","values","subopt","_parseShorthandNotation","parameter","sense","positional","_parse","sep","extended","_defaults","result","_cleanupOptions","group_options","inherit","$possible_config_providers","final_length","hasClass","parents","addBack","provider","data","attr","current_value","add_argument","event_listener_map","Map","remove_event_listener","els","removeEventListener","el_events","get","delete","size","UpdateEvent","CustomEvent","super","bubbles","cancelable","detail","add_event_listener","event_type","cb","addEventListener","has","set","_cb","once","capture","await_event","event_name","await_pattern_init","reject","one","catch","generic_event","Event","update_event","blur_event","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","submitter","event","dragstart_event","dragend_event","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","document_ready","scan","clear","transformPattern","content","transform","initPattern","plog","orderPatterns","splice","querySelector","Text","selectors","selector_string","selector","querySelectorAllAndMe","reverse","register","BLACKLIST","__patternslib_patterns_blacklist","jquery_plugin","plugin_name","logger","DATA_PREFIX","DATA_STYLE_DISPLAY","INPUT_SELECTOR","querySelectorAll","all","get_css_value","property","as_pixels","as_float","getComputedStyle","getPropertyValue","get_relative_position","reference_el","abs","scrollLeft","scrollTop","get_data","set_data","fn","event_id","create_uuid","_ready","readyState","events","wrap","wrapper","insertBefore","display","find_inputs","find_parents","ret","find_scoped","get_parents","HTMLElement","acquire_attribute","include_empty","include_all","_el","parentElement","is_visible","offsetWidth","offsetHeight","is_input","nodeName","is_button","create_from_string","string","createRange","createContextualFragment","find_scroll_container","direction","fallback","overflow_y","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","position","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","delete_data","template","template_string","template_variables","get_visible_ratio","container","rect","container_rect","visible_ratio","rect_height","escape_css_id","CSS","escape","element_uuid","find_form","parser","Parser","xhrCount","a","_","off","on","onTriggerEvents","onClickSubmit","destroy","preventDefault","request","_request","cfg","seqNumber","inc","temp","clickedData","serialize","Boolean","headers","cache","browserCache","accept","Accept","is","formdata","FormData","key","append","removeData","ajax_deferred","done","status","jqxhr","fail","uuid","crypto","randomUUID","array","Uint32Array","getRandomValues","SubmitEvent","last_btn","submitable_buttons","canditates","activeElement","candidate","navigation","NavigateEvent","destination","create_event","pushState","history","dispatchEvent","replaceState"],"sourceRoot":""}