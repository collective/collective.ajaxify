{"version":3,"file":"chunks/resources_index_js.11606776737115ad7ca4.min.js","mappings":";;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,aAAa,GAAG,CAAC,CAAC;AACxB,IAAIC,4BAA4B,GAAG,KAAK;AAEzB,eAAeC,aAAaA,CAACC,MAAM,EAAE;EAChD,MAAMC,SAAS,GAAGC,MAAM,CAACF,MAAM,CAAC;;EAEhC;EACA,IAAIH,aAAa,CAACG,MAAM,CAAC,EAAE;IACvB,OAAOC,SAAS;EACpB;;EAEA;EACA,IAAI,CAACH,4BAA4B,EAAE;IAC/B,MAAMK,qBAAwB,CAAC,SAAS,CAAC,CAAC,CAAC;IAC3CL,4BAA4B,GAAG,IAAI;EACvC;EAEA,MAAMG,SAAS,CAACG,IAAI,CAACC,qBAAwB,CAACC,OAAO,CAAC,CAAC,CAAC;;EAExD;EACAT,aAAa,CAACG,MAAM,CAAC,GAAG,IAAI;EAC5B,OAAOC,SAAS;AACpB,C;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACoE;;AAEpE;AACA;AACA;AACO,MAAMM,cAAc,GAAG,oBAAoB;AAElD,IAAI,OAAOL,MAAM,CAACM,2BAA2B,KAAK,WAAW,EAAE;EAC3DN,MAAM,CAACM,2BAA2B,GAAG,CAAC,CAAC;AAC3C;AACA,MAAMX,aAAa,GAAGK,MAAM,CAACM,2BAA2B;AAEjD,eAAeC,iBAAiBA,CAAC;EAAEC,WAAW;EAAEC,cAAc,GAAG;AAAS,CAAC,EAAE;EAChF,IAAId,aAAa,CAAC,GAAGa,WAAW,IAAIC,cAAc,EAAE,CAAC,EAAE;IACnD;IACA;EACJ;EACA,MAAMV,SAAS,GAAG,MAAMF,iFAAa,CAACW,WAAW,CAAC;EAClD,MAAME,OAAO,GAAG,MAAMX,SAAS,CAACY,GAAG,CAACF,cAAc,CAAC;EACnD,MAAMG,MAAM,GAAGF,OAAO,CAAC,CAAC;EAExBf,aAAa,CAAC,GAAGa,WAAW,IAAIC,cAAc,EAAE,CAAC,GAAG,IAAI;EAExDI,OAAO,CAACC,KAAK,CACT,iEAAiEN,WAAW,IAChF,CAAC;EAED,OAAOI,MAAM;AACjB;AAEA,SAASG,cAAcA,CAACC,EAAE,EAAE;EACxB;EACA,IAAIC,QAAQ,CAACC,UAAU,KAAK,UAAU,IAAID,QAAQ,CAACC,UAAU,KAAK,aAAa,EAAE;IAC7E;IACAC,UAAU,CAACH,EAAE,EAAE,CAAC,CAAC;EACrB,CAAC,MAAM;IACHC,QAAQ,CAACG,gBAAgB,CAAC,kBAAkB,EAAEJ,EAAE,CAAC;EACrD;AACJ;AAEAD,cAAc,CAAC,YAAY;EACvB;EACA;EACA;EACA;EACA,MAAMM,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACvB,MAAM,CAAC,CAACwB,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,OAAO,CAACrB,cAAc,CAAC,KAAK,CAAC,CAAC;EACpF,KAAK,MAAMsB,WAAW,IAAIN,OAAO,EAAE;IAC/B;IACAd,iBAAiB,CAAC;MAAEC,WAAW,EAAEmB;IAAY,CAAC,CAAC;EACnD;EACAV,QAAQ,CAACW,aAAa,CAClB,IAAIC,KAAK,CAAC,yBAAyB,EAAE;IAAEC,OAAO,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAM,CAAC,CAC7E,CAAC;AACL,CAAC,CAAC,C;;;;;;;;;;;;ACxDkD;;AAEpD;AACA,sSAAkB,C","sources":["webpack://thet.spa/./node_modules/@patternslib/dev/webpack/module_federation--dynamic-federation.js","webpack://thet.spa/./node_modules/@patternslib/dev/webpack/module_federation.js","webpack://thet.spa/./resources/index.js"],"sourcesContent":["// Author: Manfred Steyer <manfred.steyer@gmx.net>\n// Author: Johannes Raggam <thetetet@gmail.com>\n\n// From:\n//   https://github.com/manfredsteyer/plugin-demo.git\n//   https://github.com/thet/module-federation-minimaltest.git\n\n/**\n * Load remote module / bundle.\n *\n * Wrapper around webpack runtime API\n *\n * Usage: get_container(\"bundle-name-xyz\")\n *\n * @param {string} remote - the remote global name\n * @returns {Promise<object>} - Federated Module Container\n */\nconst container_map = {};\nlet is_default_scope_initialized = false;\n\nexport default async function get_container(remote) {\n    const container = window[remote];\n\n    // Do we still need to initialize the remote?\n    if (container_map[remote]) {\n        return container;\n    }\n\n    // Do we still need to initialize the shared scope?\n    if (!is_default_scope_initialized) {\n        await __webpack_init_sharing__(\"default\"); // eslint-disable-line no-undef\n        is_default_scope_initialized = true;\n    }\n\n    await container.init(__webpack_share_scopes__.default); // eslint-disable-line no-undef\n\n    // Remember that the container has been initialized.\n    container_map[remote] = true;\n    return container;\n}\n","/**\n * Initialize dynamic module federation.\n */\nimport get_container from \"./module_federation--dynamic-federation\";\n\n// Patternslib Module Federation bundle prefix.\n// This is used to filter for module federation enabled bundles.\n// NOTE: This is also defined in ``webpack.mf.js``.\nexport const MF_NAME_PREFIX = \"__patternslib_mf__\";\n\nif (typeof window.__patternslib_container_map === \"undefined\") {\n    window.__patternslib_container_map = {};\n}\nconst container_map = window.__patternslib_container_map;\n\nexport async function initialize_remote({ remote_name, exposed_module = \"./main\" }) {\n    if (container_map[`${remote_name}-${exposed_module}`]) {\n        // already initialized, return.\n        return;\n    }\n    const container = await get_container(remote_name);\n    const factory = await container.get(exposed_module);\n    const module = factory();\n\n    container_map[`${remote_name}-${exposed_module}`] = true;\n\n    console.debug(\n        `Patternslib Module Federation: Loaded and initialized bundle \"${remote_name}\".`\n    );\n\n    return module;\n}\n\nfunction document_ready(fn) {\n    // see if DOM is already available\n    if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n        // call on next available tick\n        setTimeout(fn, 1);\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", fn);\n    }\n}\n\ndocument_ready(function () {\n    // Automatically initialize all Module Federation enabled Patternslib based\n    // bundles by filtering for the prefix ``__patternslib_mf__``.\n    // Do this on document ready, as this is the time where all MF bundles have\n    // been registered in the global namespace.\n    const bundles = Object.keys(window).filter((it) => it.indexOf(MF_NAME_PREFIX) === 0);\n    for (const bundle_name of bundles) {\n        // Now load + initialize each bundle.\n        initialize_remote({ remote_name: bundle_name });\n    }\n    document.dispatchEvent(\n        new Event(\"patternslib__mf--loaded\", { bubbles: true, cancelable: false })\n    );\n});\n","import \"@patternslib/dev/webpack/module_federation\";\n\n// Webpack entry point for module federation.\nimport(\"./bundle\");\n"],"names":["container_map","is_default_scope_initialized","get_container","remote","container","window","__webpack_init_sharing__","init","__webpack_share_scopes__","default","MF_NAME_PREFIX","__patternslib_container_map","initialize_remote","remote_name","exposed_module","factory","get","module","console","debug","document_ready","fn","document","readyState","setTimeout","addEventListener","bundles","Object","keys","filter","it","indexOf","bundle_name","dispatchEvent","Event","bubbles","cancelable"],"sourceRoot":""}